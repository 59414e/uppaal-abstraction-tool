<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int NC = 2;
const int NV = 2;

//typedef int[1,NC] c_t;
//typedef int[0,NC] c_tx;

chan ng[NV], g[NV];
int[0,NC] sh;

// Coercer local declarations
int[0,1] K_voted[NV][NC];
int[0,1] K_refused[NV];
</declaration>
	<template>
		<name x="5" y="5">Voter</name>
		<parameter>int[0,NV-1] id</parameter>
		<declaration>// Place local declarations here.

int[0,NC] x;</declaration>
		<location id="id0" x="160" y="160">
			<name x="176" y="152">disobeyed</name>
		</location>
		<location id="id1" x="32" y="160">
			<name x="48" y="152">obeyed</name>
		</location>
		<location id="id2" x="96" y="64">
			<name x="112" y="56">voted</name>
		</location>
		<location id="id3" x="96" y="-32">
			<name x="112" y="-40">idle</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="136" y="88">ng[id]!</label>
			<nail x="153" y="144"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="25" y="85">g[id]!</label>
			<label kind="assignment" x="24" y="104">sh=x</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="104" y="0">i:int[1,NC]</label>
			<label kind="assignment" x="104" y="16">x=i</label>
		</transition>
	</template>
	<template>
		<name>Coercer</name>
		<declaration>// Coercer local declarations 
// (for the shortness of query those were moved to the global scope)</declaration>
		<location id="id4" x="-68" y="-68">
			<name x="-78" y="-98">idle</name>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="select" x="8" y="-110">vi:int[0,NV-1]</label>
			<label kind="synchronisation" x="8" y="-93">ng[vi]?</label>
			<label kind="assignment" x="8" y="-76">K_refused[vi]=1</label>
			<nail x="-4" y="-29"/>
			<nail x="-4" y="-106"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="select" x="-263" y="-110">vi:int[0,NV-1]</label>
			<label kind="synchronisation" x="-263" y="-93">g[vi]?</label>
			<label kind="assignment" x="-263" y="-76">K_voted[vi][sh]=1,
sh=0</label>
			<nail x="-131" y="-29"/>
			<nail x="-131" y="-106"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Voter, Coercer;</system>
	<queries>
		<query>
			<formula>A[] (
	(Voter.idle &amp;&amp; Coercer.halt imply K_voted[1] || K_voted[2] || K_refused) || (Voter.idle &amp;&amp; Coercer.idle imply K_voted[1] || K_voted[2] || K_refused)
) || (
	(Voter.voted &amp;&amp; Coercer.halt imply K_voted[1] || K_voted[2] || K_refused) || (Voter.voted &amp;&amp; Coercer.idle imply K_voted[1] || K_voted[2] || K_refused)
) || (
	(Voter.obeyed &amp;&amp; Coercer.halt imply K_voted[1] || K_voted[2] || K_refused) || (Voter.obeyed &amp;&amp; Coercer.idle imply K_voted[1] || K_voted[2] || K_refused)
) || (
	(Voter.disobeyed &amp;&amp; Coercer.halt imply K_voted[1] || K_voted[2] || K_refused) || (Voter.disobeyed &amp;&amp; Coercer.idle imply K_voted[1] || K_voted[2] || K_refused)
)</formula>
			<comment>sample of the "brute-force generated" AF</comment>
		</query>
		<query>
			<formula>A[](Coercer.halt imply K_voted[1] || K_voted[2] || K_refused) || (Coercer.idle imply K_voted[1] || K_voted[2] || K_refused)</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
