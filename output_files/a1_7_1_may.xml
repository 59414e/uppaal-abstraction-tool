<?xml version="1.0" encoding="utf-8"?>
        <!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'><nta>
  <declaration>const int __d_vals_at_id0__l9eix3dt[1][2] = {{0,0}};
const int __d_vals_at_id1__l9eix3dt[4][2] = {{0,0},{0,1},{1,0},{1,1}};
const int __d_vals_at_id2__l9eix3dt[1][2] = {{0,0}};
const int __d_vals_at_id3__l9eix3dt[1][2] = {{0,0}};
// Place global declarations here.&#xD;
const int N_V = 7;&#xD;
const int N_C = 1;&#xD;
&#xD;
chan decl[N_V+1];&#xD;
chan coll[N_V+1];&#xD;
chan vote[N_V+1];&#xD;
//int[0,N_V] tally[N_C+1];&#xD;
&#xD;
int[0,2] sh_dec; // 1 - inperson, 2 - by mail&#xD;
int[0,1] buff_mail[N_V+1]; // election package is delivered to mailbox&#xD;
int[0,N_C] sh_vt; // chosen candidate&#xD;
int[0,1] sh_sg; // signed form (honest+private casting)&#xD;
&#xD;
//int ballots_received(){&#xD;
//    int i;&#xD;
//	int res=0;&#xD;
//	if(tally_sum!=0)return tally_sum;&#xD;
//    return tally_1+tally_2+tally_3;&#xD;
//}&#xD;
</declaration>
  <template>
    <name x="5" y="5">Voter</name>
    <parameter>int[1,N_V] id</parameter>
    <declaration>// Place local declarations here.&#xD;
int[0,2] mem_dec;&#xD;
int[0,1] mem_sg;&#xD;
int[0,N_C] mem_vt;

void _set_argsr_values__l9eix3dt(int _val_of_mem_sg, int _val_of_mem_vt){
	mem_sg= _val_of_mem_sg;
	mem_vt= _val_of_mem_vt;
}
void _update_argsn_values__l9eix3dt(){
	
}</declaration>
    <location id="id0" x="64" y="-96">
      <name x="64" y="-80">id0</name>
    </location>
    <location id="id1" x="256" y="-96">
      <name x="246" y="-85">end</name>
    </location>
    <location id="id2" x="-128" y="-96">
      <name x="-152" y="-80">waits</name>
    </location>
    <location id="id3" x="-320" y="-96">
      <name x="-336" y="-80">idle</name>
    </location>
    <init ref="id3"/>
    <transition>
      <source ref="id0"/>
      <target ref="id1"/>
      <label kind="select" x="128" y="-312">vt:int[0,N_C],&#xD;
sg:int[0,1],
_l9eix3dt:int[0,0]</label>
      <label kind="synchronisation" x="128" y="-280">vote [ id ]!</label>
      <label kind="assignment" x="128" y="-264">_set_argsr_values__l9eix3dt(__d_vals_at_id0__l9eix3dt[_l9eix3dt][0],__d_vals_at_id0__l9eix3dt[_l9eix3dt][1]),
_update_argsn_values__l9eix3dt(),
sh_vt=vt,&#xD;
sh_sg=sg,&#xD;
mem_sg=sg,&#xD;
mem_vt=vt,
_update_argsn_values__l9eix3dt(),
_set_argsr_values__l9eix3dt(0,0)</label>
      <nail x="160" y="-192"/>
    </transition>
    <transition>
      <source ref="id2"/>
      <target ref="id0"/>
      <label kind="select">_l9eix3dt:int[0,0]</label>
      <label kind="guard" x="-56" y="0">mem_dec==2 &amp;&amp; buff_mail[id]==1</label>
      <label kind="assignment" x="-56" y="16">_set_argsr_values__l9eix3dt(__d_vals_at_id2__l9eix3dt[_l9eix3dt][0],__d_vals_at_id2__l9eix3dt[_l9eix3dt][1]),
_update_argsn_values__l9eix3dt(),
buff_mail[id]=0,
_update_argsn_values__l9eix3dt(),
_set_argsr_values__l9eix3dt(0,0)</label>
      <nail x="-32" y="0"/>
    </transition>
    <transition>
      <source ref="id2"/>
      <target ref="id0"/>
      <label kind="select">_l9eix3dt:int[0,0]</label>
      <label kind="guard" x="-56" y="-232">mem_dec==1</label>
      <label kind="synchronisation" x="-56" y="-216">coll [ id ]!</label>
      <nail x="-32" y="-192"/>
    </transition>
    <transition>
      <source ref="id3"/>
      <target ref="id2"/>
      <label kind="select" x="-256" y="-264">inperson:int[1,2],
_l9eix3dt:int[0,0]</label>
      <label kind="synchronisation" x="-256" y="-248">decl [ id ]!</label>
      <label kind="assignment" x="-256" y="-232">_set_argsr_values__l9eix3dt(__d_vals_at_id3__l9eix3dt[_l9eix3dt][0],__d_vals_at_id3__l9eix3dt[_l9eix3dt][1]),
_update_argsn_values__l9eix3dt(),
mem_dec=inperson,&#xD;
sh_dec=inperson,
_update_argsn_values__l9eix3dt(),
_set_argsr_values__l9eix3dt(0,0)</label>
      <nail x="-224" y="-192"/>
    </transition>
  </template>
  <template>
    <name>Authority</name>
    <declaration>int[0,2] dec_recv[N_V+1];  // 1 - inperson, 2 - mailbox&#xD;
int[0,1] pack_sent[N_V+1];&#xD;
int[0,N_C] vt_recv[N_V+1]; &#xD;
int[0,1] sg_recv[N_V+1]; &#xD;
&#xD;
int[0,N_V] tally_1;&#xD;
int[0,N_V] tally_2;&#xD;
int[0,N_V] tally_3;&#xD;
&#xD;
int tally_sum;&#xD;
&#xD;
/*&#xD;
void foo(){&#xD;
    meta int i;&#xD;
    for(i=1;i&lt;=N_V;i++){&#xD;
        dec_recv[i]=0;&#xD;
    }&#xD;
}&#xD;
*/</declaration>
    <location id="id4" x="288" y="0">
      <name x="256" y="16">coll_vts</name>
    </location>
    <location id="id5" x="128" y="0">
      <name x="56" y="16">send_ep</name>
    </location>
    <location id="id6" x="-32" y="0">
      <name x="-56" y="16">coll_dec</name>
    </location>
    <init ref="id6"/>
    <transition>
      <source ref="id4"/>
      <target ref="id4"/>
      <label kind="select" x="256" y="-152">v_i:int[1,N_V]</label>
      <label kind="synchronisation" x="256" y="-136">vote[v_i]?</label>
      <label kind="assignment" x="256" y="-120">tally_1 = (sh_sg &amp;&amp; sh_vt==1) ? (tally_1 + 1) : tally_1,&#xD;
tally_2 = (sh_sg &amp;&amp; sh_vt==2) ? (tally_2 + 1) : tally_2,&#xD;
tally_3 = (sh_sg &amp;&amp; sh_vt==3) ? (tally_3 + 1) : tally_3,&#xD;
sh_vt=0,&#xD;
sh_sg=0</label>
      <nail x="320" y="-64"/>
      <nail x="256" y="-64"/>
    </transition>
    <transition>
      <source ref="id5"/>
      <target ref="id5"/>
      <label kind="select" x="96" y="64">v_i:int[1,N_V]</label>
      <label kind="guard" x="96" y="80">dec_recv[v_i]==2 &amp;&amp;&#xD;
pack_sent[v_i]==0</label>
      <label kind="assignment" x="96" y="112">buff_mail[v_i]=1,&#xD;
pack_sent[v_i]+=1</label>
      <nail x="96" y="64"/>
      <nail x="160" y="64"/>
    </transition>
    <transition>
      <source ref="id5"/>
      <target ref="id5"/>
      <label kind="select" x="96" y="-151">v_i:int[1,N_V]</label>
      <label kind="guard" x="96" y="-136">dec_recv[v_i]==1 &amp;&amp;&#xD;
pack_sent[v_i]==0</label>
      <label kind="synchronisation" x="96" y="-104">coll[v_i]?</label>
      <label kind="assignment" x="96" y="-88">pack_sent[v_i]+=1</label>
      <nail x="160" y="-64"/>
      <nail x="96" y="-64"/>
    </transition>
    <transition>
      <source ref="id5"/>
      <target ref="id4"/>
    </transition>
    <transition>
      <source ref="id6"/>
      <target ref="id5"/>
    </transition>
    <transition>
      <source ref="id6"/>
      <target ref="id6"/>
      <label kind="select" x="-120" y="-128">v_i:int[1,N_V]</label>
      <label kind="synchronisation" x="-120" y="-112">decl[v_i]?</label>
      <label kind="assignment" x="-120" y="-96">dec_recv[v_i]=sh_dec,&#xD;
sh_dec=0</label>
      <nail x="0" y="-64"/>
      <nail x="-64" y="-64"/>
    </transition>
  </template>
  <system>// Place template instantiations here.&#xD;
&#xD;
// List one or more processes to be composed into a system.&#xD;
system Voter, Authority;</system>
  <queries>
    <query>
      <formula>A[]1==1</formula>
      <comment></comment>
    </query>
  </queries>
</nta>