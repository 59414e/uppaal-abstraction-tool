<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N_V = 1;
const int N_C = 2;

chan decl[N_V+1];
chan coll[N_V+1];
chan vote[N_V+1];
int[0,N_V] tally[N_C+1];
int tally_sum;
int[0,2] sh_dec; // 1 - inperson, 2 - by mail
int[0,1] buff_mail[N_V+1]; // election package is delivered to mailbox
int[0,N_C] sh_vt; // chosen candidate
int[0,1] sh_sg; // signed form (honest+private casting)

int ballots_received(){
    int i;
	int res=0;
	if(tally_sum!=0)return tally_sum;
    for(i=1;i&lt;=N_C;i++){
        res+=tally[i];
    }
    return res;
}
</declaration>
	<template>
		<name x="5" y="5">ExtendedMAS</name>
		<declaration>// From [object Object]:
// Place local declarations here.
const int id=1;
int[0,2] mem_dec;
int[0,1] mem_sg;
int[0,N_C] mem_vt;
// From Authority:
int[0,2] dec_recv[N_V+1];  // 1 - inperson, 2 - mailbox
int[0,1] pack_sent[N_V+1];
int[0,N_C] vt_recv[N_V+1]; 
int[0,1] sg_recv[N_V+1]; 

/*
void foo(){
    meta int i;
    for(i=1;i&lt;=N_V;i++){
        dec_recv[i]=0;
    }
}
*/</declaration>
		<location id="id0" x="40" y="80">
			<name x="30" y="50">id3__id6</name>
		</location>
		<location id="id1" x="190" y="80">
			<name x="180" y="50">id3__id5</name>
		</location>
		<location id="id2" x="190" y="230">
			<name x="180" y="200">id2__id6</name>
		</location>
		<location id="id3" x="40" y="230">
			<name x="30" y="200">id3__id4</name>
		</location>
		<location id="id4" x="340" y="80">
			<name x="330" y="50">id0__id6</name>
		</location>
		<location id="id5" x="340" y="230">
			<name x="330" y="200">id2__id5</name>
		</location>
		<location id="id6" x="340" y="380">
			<name x="330" y="350">id0__id5</name>
		</location>
		<location id="id7" x="190" y="380">
			<name x="180" y="350">id2__id4</name>
		</location>
		<location id="id8" x="40" y="380">
			<name x="30" y="350">id0__id4</name>
		</location>
		<location id="id9" x="490" y="80">
			<name x="480" y="50">id1__id4</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="select" x="55" y="110">inperson:int[1,2],
v_i:int[1,N_V]</label>
			<label kind="guard" x="55" y="125">id==v_i</label>
			<label kind="assignment" x="55" y="155">mem_dec=inperson,
sh_dec=inperson,
dec_recv[v_i]=sh_dec,
sh_dec=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="select" x="130" y="35">v_i:int[1,N_V]</label>
			<label kind="guard" x="130" y="50">dec_recv[v_i]==2 &amp;&amp;
pack_sent[v_i]==0</label>
			<label kind="assignment" x="130" y="80">buff_mail[v_i]=1,
pack_sent[v_i]++</label>
			<nail x="160" y="50"/>
			<nail x="220" y="50"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="205" y="125">mem_dec==2 &amp;&amp; 
buff_mail[id]==1</label>
			<label kind="assignment" x="205" y="155">buff_mail[id]=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="280" y="275">mem_dec==2 &amp;&amp; 
buff_mail[id]==1</label>
			<label kind="assignment" x="280" y="305">buff_mail[id]=0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="select" x="280" y="185">v_i:int[1,N_V]</label>
			<label kind="guard" x="280" y="200">dec_recv[v_i]==2 &amp;&amp;
pack_sent[v_i]==0</label>
			<label kind="assignment" x="280" y="230">buff_mail[v_i]=1,
pack_sent[v_i]++</label>
			<nail x="310" y="200"/>
			<nail x="370" y="200"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="select" x="280" y="260">v_i:int[1,N_V]</label>
			<label kind="guard" x="280" y="275">id==v_i &amp;&amp; mem_dec==1 &amp;&amp; dec_recv[v_i]==1 &amp;&amp;
pack_sent[v_i]==0</label>
			<label kind="assignment" x="280" y="305">pack_sent[v_i]++</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="select" x="280" y="335">v_i:int[1,N_V]</label>
			<label kind="guard" x="280" y="350">dec_recv[v_i]==2 &amp;&amp;
pack_sent[v_i]==0</label>
			<label kind="assignment" x="280" y="380">buff_mail[v_i]=1,
pack_sent[v_i]++</label>
			<nail x="310" y="350"/>
			<nail x="370" y="350"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="55" y="350">mem_dec==2 &amp;&amp; 
buff_mail[id]==1</label>
			<label kind="assignment" x="55" y="380">buff_mail[id]=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="select" x="205" y="185">vt:int[0,N_C],
sg:int[0,1],
v_i:int[1,N_V]</label>
			<label kind="guard" x="205" y="200">id==v_i</label>
			<label kind="assignment" x="205" y="230">sh_vt=vt,
sh_sg=sg,
mem_sg=sg,
mem_vt=vt,
tally[((sh_vt-1)+N_C)%N_C+1]=sh_sg &amp;&amp; sh_vt&gt;0 ? tally[sh_vt]+1 : tally[((sh_vt-1)+N_C)%N_C+1],
sh_vt=0,
sh_sg=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = ExtendedMAS();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
